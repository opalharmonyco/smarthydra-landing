#!/bin/bash

# Deploy Landing Page Command
# Automatically commits changes and pushes to main branch for Vercel deployment

echo "🚀 Deploying SmartHydra Landing Page..."

# Check if we're in the right directory
if [ ! -f "package.json" ] || [ ! -d ".git" ]; then
    echo "❌ Error: Not in the SmartHydra landing page repository directory"
    echo "Please run this command from the smarthydra-landing-page directory"
    exit 1
fi

# Check if there are any changes to commit
if [ -z "$(git status --porcelain)" ]; then
    echo "✅ No changes to commit. Repository is up to date."
    exit 0
fi

# Show current status
echo "📋 Current git status:"
git status --short

# Add all changes
echo "📦 Adding all changes..."
git add .

# Generate commit message based on changes
echo "📝 Generating commit message..."

# Get list of changed files
CHANGED_FILES=$(git diff --cached --name-only)

# Determine the type of changes
COMMIT_TYPE="feat"
COMMIT_SCOPE="landing-page"

if echo "$CHANGED_FILES" | grep -q "\.scss\|\.css"; then
    COMMIT_TYPE="style"
    COMMIT_DESCRIPTION="Update styling and layout"
elif echo "$CHANGED_FILES" | grep -q "\.js"; then
    COMMIT_TYPE="feat"
    COMMIT_DESCRIPTION="Update JavaScript functionality"
elif echo "$CHANGED_FILES" | grep -q "\.html"; then
    COMMIT_TYPE="feat"
    COMMIT_DESCRIPTION="Update page content and structure"
elif echo "$CHANGED_FILES" | grep -q "\.md\|\.txt"; then
    COMMIT_TYPE="docs"
    COMMIT_DESCRIPTION="Update documentation"
else
    COMMIT_TYPE="feat"
    COMMIT_DESCRIPTION="Update landing page"
fi

# Create commit message
COMMIT_MESSAGE="$COMMIT_TYPE($COMMIT_SCOPE): $COMMIT_DESCRIPTION

Files changed:
$(echo "$CHANGED_FILES" | sed 's/^/  - /')

Auto-deployed via Cursor command"

echo "💬 Commit message:"
echo "$COMMIT_MESSAGE"
echo ""

# Commit changes
echo "💾 Committing changes..."
git commit -m "$COMMIT_MESSAGE"

if [ $? -ne 0 ]; then
    echo "❌ Failed to commit changes"
    exit 1
fi

# Check SSH setup before pushing
echo "🔑 Checking SSH setup..."
if ! ssh-add -l &>/dev/null; then
    echo "⚠️  SSH agent not running or no keys loaded"
    echo "🔧 Attempting to set up SSH..."
    eval "$(ssh-agent -s)" && ssh-add ~/.ssh/id_ed25519_opal
fi

# Push to main branch
echo "📤 Pushing to main branch..."
git push origin main

if [ $? -eq 0 ]; then
    echo ""
    echo "🎉 Successfully deployed to production!"
    echo "🌐 Vercel will automatically deploy the changes"
    echo "📊 Check deployment status at: https://vercel.com/opalharmonyco/smarthydra-landing"
    echo ""
    echo "📋 Deployment Summary:"
    echo "  - Repository: opalharmonyco/smarthydra-landing"
    echo "  - Branch: main"
    echo "  - Files changed: $(echo "$CHANGED_FILES" | wc -l)"
    echo "  - Commit: $(git rev-parse --short HEAD)"
else
    echo "❌ Failed to push to repository"
    echo "💡 Try running /ssh-setup first to configure SSH authentication"
    exit 1
fi
